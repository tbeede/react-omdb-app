{"version":3,"sources":["images/no-photo.jpg","components/Search.jsx","components/MovieGrid.jsx","components/Main.jsx","App.js","serviceWorker.js","index.js","images/hackersposter.jpg"],"names":["module","exports","__webpack_require__","p","Search","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleProfileMenuOpen","event","setState","anchorEl","currentTarget","handleMenuClose","handleMobileMenuClose","handleMobileMenuOpen","mobileMoreAnchorEl","state","moviesList","searchTerm","_this$state","_this$props","classes","onChange","onKeyPress","isMenuOpen","Boolean","isMobileMenuOpen","renderMenu","react_default","a","createElement","Menu_default","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","MenuItem_default","onClick","renderMobileMenu","IconButton_default","color","AccountCircle_default","className","root","AppBar_default","position","Toolbar_default","toolbar","Link_default","underline","block","href","Typography_default","title","variant","noWrap","search","searchIcon","Search_default","InputBase_default","placeholder","inputRoot","input","inputInput","grow","sectionDesktop","lib_default","name","mega","sectionMobile","aria-haspopup","MoreVert_default","React","Component","withStyles","theme","width","backgroundColor","flexGrow","menuButton","marginLeft","marginRight","defineProperty","display","breakpoints","up","borderRadius","shape","fade","palette","common","white","&:hover","spacing","unit","height","pointerEvents","alignItems","justifyContent","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","MovieGrid","movieInfo","imdbId","_this2","url","concat","movieMap","axios","get","then","res","data","catch","err","console","log","Grid_default","container","item","xs","justify","Number","length","map","GridListTile_default","key","Poster","src","NoPhoto","alt","Title","GridListTileBar_default","subtitle","Year","actionIcon","icon","Info_default","error","Hackers","paper","control","padding","spinner","alignSelf","fontSize","Main","handleChange","target","value","bind","assertThisInitialized","handleKeyPress","Fragment","components_Search","components_MovieGrid","App","components_Main","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.68932648.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no-photo.ce5fc191.jpg\";","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport {fade} from '@material-ui/core/styles/colorManipulator';\nimport {withStyles} from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport Link from \"@material-ui/core/Link\";\nimport Octicon from 'react-octicon'\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n    },\n    toolbar: {\n        backgroundColor: 'black',\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing.unit * 2,\n        marginLeft: 0,\n        width: 'auto',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing.unit * 3,\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        width: theme.spacing.unit * 9,\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n        width: '100%',\n    },\n    inputInput: {\n        paddingTop: theme.spacing.unit,\n        paddingRight: theme.spacing.unit,\n        paddingBottom: theme.spacing.unit,\n        paddingLeft: theme.spacing.unit * 10,\n        transition: theme.transitions.create('width'),\n        width: 'auto',\n        [theme.breakpoints.up('md')]: {\n            width: 1200,\n        },\n    },\n    sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n});\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            mobileMoreAnchorEl: null,\n            moviesList: ['tt0113243'],\n            searchTerm: '',\n        };\n    }\n\n    handleProfileMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n        this.handleMobileMenuClose();\n    };\n\n    handleMobileMenuOpen = event => {\n        this.setState({ mobileMoreAnchorEl: event.currentTarget });\n    };\n\n    handleMobileMenuClose = () => {\n        this.setState({ mobileMoreAnchorEl: null });\n    };\n\n    render() {\n        const { anchorEl, mobileMoreAnchorEl } = this.state;\n        const { classes, onChange, onKeyPress } = this.props;\n        const isMenuOpen = Boolean(anchorEl);\n        const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n        const renderMenu = (\n            <Menu\n                anchorEl={anchorEl}\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                open={isMenuOpen}\n                onClose={this.handleMenuClose}\n            >\n                <MenuItem onClick={this.handleMenuClose}>Profile</MenuItem>\n                <MenuItem onClick={this.handleMenuClose}>My account</MenuItem>\n            </Menu>\n        );\n\n        const renderMobileMenu = (\n            <Menu\n                anchorEl={mobileMoreAnchorEl}\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                open={isMobileMenuOpen}\n                onClose={this.handleMenuClose}\n            >\n                <MenuItem onClick={this.handleProfileMenuOpen}>\n                    <IconButton color=\"inherit\">\n                        <AccountCircle />\n                    </IconButton>\n                    <p>Profile</p>\n                </MenuItem>\n            </Menu>\n        );\n\n        return (\n            <div className={classes.root}>\n                <AppBar position=\"static\">\n                    <Toolbar className={classes.toolbar}>\n                        <i className=\"material-icons\">\n                            local_movies\n                        </i>\n                        <Link underline={'none'} block={true} href={'/home'}>\n                        <Typography className={classes.title} variant=\"h5\" color=\"inherit\" noWrap>\n                            OMDb Search\n                        </Typography>\n                        </Link>\n                        <div className={classes.search}>\n                            <div className={classes.searchIcon}>\n                                <SearchIcon />\n                            </div>\n                            <InputBase\n                                onChange={onChange}\n                                onKeyPress={onKeyPress}\n                                placeholder=\"Search for a movie or television show\"\n                                classes={{\n                                    root: classes.inputRoot,\n                                    input: classes.inputInput,\n                                }}\n                            />\n                        </div>\n                        <div className={classes.grow} />\n                        <div className={classes.sectionDesktop}>\n                            <Link underline={'none'} block={true} href={'https://github.com/tbeede/react-omdb-app'}>\n                            <IconButton\n                                color=\"inherit\"\n                            >\n                                <Octicon name=\"logo-github\" mega/>\n                            </IconButton>\n                            </Link>\n                        </div>\n                        <div className={classes.sectionMobile}>\n                            <IconButton aria-haspopup=\"true\" onClick={this.handleMobileMenuOpen} color=\"inherit\">\n                                <MoreIcon />\n                            </IconButton>\n                        </div>\n                    </Toolbar>\n                </AppBar>\n                {renderMenu}\n                {renderMobileMenu}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Search);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InfoIcon from '@material-ui/icons/Info';\nimport {withStyles} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport NoPhoto from '../images/no-photo.jpg'\nimport Hackers from '../images/hackersposter.jpg'\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: 'black',\n    },\n    paper: {\n        height: 140,\n        width: 100,\n    },\n    control: {\n        padding: theme.spacing.unit * 2,\n    },\n    spinner: {\n        color: '#134FA8',\n        alignSelf: 'center'\n    },\n    error: {\n        fontSize: 20,\n        backgroundColor: 'black',\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    }\n});\n\nclass MovieGrid extends React.Component {\n    state = {\n        spacing: '16',\n        movieInfo: [],\n        imdbId: 'tt0113243'\n    };\n\n    componentDidMount() {\n        let url = `https://www.omdbapi.com/?apikey=f86c0e32&s=\n        ${this.props.movieMap}\n        &plot=full`;\n\n        axios\n            .get(\n                url\n            )\n            .then(res => res.data)\n            .then(res => {\n                this.setState({\n                    movieInfo: res\n                });\n            })\n            .catch(err => console.log(err));\n    }\n\n    render() {\n        const { classes, movieMap } = this.props;\n        const { spacing } = this.state;\n\n        return (\n            <Grid container className={classes.root} spacing={8}>\n                <Grid item xs={10}>\n                    <Grid container justify=\"center\" spacing={Number(spacing)}>\n                        {movieMap.length > 0 ? (\n                            movieMap.map(res => (\n                                <GridListTile key={res.Poster}>\n                                    {res.Poster === '' || res.Poster === 'N/A' ?\n                                        <img src={NoPhoto} alt={res.Title} />\n                                        : <img src={res.Poster} alt={res.Title} />\n                                    }\n                                    <GridListTileBar\n                                        title={res.Title}\n                                        subtitle={<span>{res.Year}</span>}\n                                        actionIcon={\n                                            <IconButton className={classes.icon}>\n                                                <InfoIcon/>\n                                            </IconButton>\n                                        }\n                                    />\n                                </GridListTile>\n                            ))\n                        ) : (\n                            <div className={classes.error}>\n                                <img src={Hackers} alt={Hackers} />\n                                Welcome to Open Movie Database Search [OMDb]\n                            </div>\n                        )}\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nMovieGrid.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MovieGrid);","import React from \"react\";\nimport Search from \"./Search\";\nimport MovieGrid from \"./MovieGrid\";\nimport axios from \"axios\";\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            moviesList: [],\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleKeyPress = this.handleKeyPress.bind(this);\n    }\n\n    handleChange = event => {\n        this.setState({\n            searchTerm: event.target.value\n        });\n    };\n\n    search() {\n        let url = `https://www.omdbapi.com/?apikey=f86c0e32&s=${\n            this.state.searchTerm\n            }&plot=full`;\n\n        axios\n            .get(\n                url\n            )\n            .then(res => res.data)\n            .then(res => {\n                if (!res.Search) {\n                    this.setState({\n                        moviesList: []\n                    });\n                    return;\n                }\n\n                const moviesList = res.Search;\n                this.setState({\n                    moviesList\n                });\n            });\n    };\n\n    handleKeyPress(event) {\n        if (event.key === 'Enter') {\n            this.search();\n        }\n    };\n\n    render() {\n        const { moviesList } = this.state;\n        return(\n            <React.Fragment>\n                    <Search\n                        onChange={this.handleChange}\n                        onKeyPress={this.handleKeyPress}\n                    />\n                    < MovieGrid movieMap={moviesList}/>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Main;","import React from 'react';\nimport './App.css';\nimport Main from \"./components/Main\";\n\nclass App extends React.Component {\n    render() {\n        return (\n            <Main />\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/hackersposter.a089d7c1.jpg\";"],"sourceRoot":""}